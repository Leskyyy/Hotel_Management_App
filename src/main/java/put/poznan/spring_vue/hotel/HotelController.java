package put.poznan.spring_vue.hotel;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import put.poznan.spring_vue.address.Address;
import put.poznan.spring_vue.room.Room;

import java.util.ArrayList;
import java.util.List;

@RestController // This means that this class is a Controller
@RequestMapping(path="/api/hotel") // This means URL's start with /demo (after Application path)
public class HotelController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private HotelRepository hotelRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public ResponseEntity<String> addNewHotel (@RequestBody Hotel hotel, @RequestParam(name = "addressID") int addressID) {
        try{
            Address address = hotelRepository.findAddressByID(addressID);
            System.out.println(address.getFirstName());
            hotel.setAddress(address);
            Hotel _hotel = hotelRepository.save(hotel);
            return new ResponseEntity<>(_hotel.getHotelName(), HttpStatus.CREATED);
        } catch (Exception e){
            e.printStackTrace();
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @GetMapping(path="/all")
    public @ResponseBody ResponseEntity<List<Hotel>> getAllHotels() {
        try {
            List<Hotel> hotels = new ArrayList<Hotel>(hotelRepository.findAll());
            if (hotels.isEmpty()) {
                return new ResponseEntity<>(HttpStatus.NO_CONTENT);
            }
            return new ResponseEntity<>(hotels, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}